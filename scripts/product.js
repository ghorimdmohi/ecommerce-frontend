document.addEventListener('DOMContentLoaded',()=>{const params=new URLSearchParams(window.location.search);const productId=params.get('id');const API_URL=`https://fakestoreapi.com/products/${productId}`;const titleEl=document.getElementById('product-title');const priceEl=document.getElementById('product-price');const totalPriceEl=document.getElementById('total-price');const descEl=document.getElementById('product-description');const imgEl=document.getElementById('product-img')||document.getElementById('main-image');const zoomLens=document.getElementById('zoom-lens');const qtyInput=document.getElementById('quantity');const addToCartBtn=document.getElementById('add-to-cart-btn');const feedback=document.getElementById('cart-feedback');const sizeSelect=document.getElementById('size-select');if(!productId){titleEl.textContent='Product not found.';return}
async function loadProduct(){try{const res=await fetch(API_URL);if(!res.ok)throw new Error('Failed to fetch product');const product=await res.json();titleEl.textContent=product.title;descEl.textContent=product.description;priceEl.textContent=`$${product.price.toFixed(2)}`;totalPriceEl.textContent=product.price.toFixed(2);imgEl.src=product.image;imgEl.alt=product.title;imgEl.dataset.price=product.price;imgEl.dataset.id=product.id;imgEl.dataset.title=product.title}catch(err){titleEl.textContent='Error loading product.';console.error(err)}}
function updateTotal(){const basePrice=parseFloat(imgEl.dataset.price);const quantity=parseInt(qtyInput.value)||1;const total=basePrice*quantity;totalPriceEl.textContent=total.toFixed(2)}
document.getElementById('increase-qty')?.addEventListener('click',()=>{qtyInput.value=Math.min(10,parseInt(qtyInput.value)+1);updateTotal()});document.getElementById('decrease-qty')?.addEventListener('click',()=>{qtyInput.value=Math.max(1,parseInt(qtyInput.value)-1);updateTotal()});qtyInput.addEventListener('input',updateTotal);addToCartBtn.addEventListener('click',()=>{const cart=JSON.parse(localStorage.getItem('cart'))||[];const item={id:parseInt(imgEl.dataset.id),title:imgEl.dataset.title,price:parseFloat(imgEl.dataset.price),quantity:parseInt(qtyInput.value),size:sizeSelect?sizeSelect.value:'default'};const existing=cart.find(p=>p.id===item.id&&p.size===item.size);if(existing){existing.quantity+=item.quantity}else{cart.push(item)}
localStorage.setItem('cart',JSON.stringify(cart));if(feedback){feedback.classList.remove('hidden');setTimeout(()=>feedback.classList.add('hidden'),2000)}
updateCartCount()});function updateCartCount(){const cart=JSON.parse(localStorage.getItem('cart'))||[];const totalItems=cart.reduce((sum,item)=>sum+item.quantity,0);const cartCount=document.querySelector('.cart-count');if(cartCount){cartCount.textContent=totalItems}}
imgEl.addEventListener('mousemove',(e)=>{if(!zoomLens)return;zoomLens.style.display='block';const rect=imgEl.getBoundingClientRect();const x=e.clientX-rect.left-50;const y=e.clientY-rect.top-50;zoomLens.style.left=`${x}px`;zoomLens.style.top=`${y}px`});imgEl.addEventListener('mouseleave',()=>{if(zoomLens)zoomLens.style.display='none'});loadProduct();updateCartCount()})